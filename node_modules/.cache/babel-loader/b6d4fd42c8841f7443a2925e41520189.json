{"ast":null,"code":"var _jsxFileName = \"/Users/wangyingjiesongxirui/Desktop/weather-app/src/components/App/App.js\";\nimport React from \"react\";\nimport Titles from \"../Titles/Titles\";\nimport Form from \"../Form/Form\";\nimport Weather from \"../Weather/Weather\";\nimport \"./App.css\";\nconst API_KEY = \"3fc44ed29eca0efe94b7e522e87c179e\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async event => {\n      event.preventDefault();\n      const city = event.target.elements.city.value;\n      const country = event.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&unit=metric`);\n      const result = await api_call.json();\n\n      if (city && country) {\n        console.log(result);\n        this.setState({\n          temperature: result.list[0].main.temp,\n          city: result.city.name,\n          country: result.city.country,\n          date: result.list[0].dt_txt.substring(0, 10),\n          id: result.city.id,\n          wind: result.list[0].wind.speed,\n          description: result.list[0].weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          error: \"Please enter a city and country\"\n        });\n      }\n    };\n\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      date: undefined,\n      id: undefined,\n      wind: undefined,\n      description: undefined,\n      error: undefined,\n      forecat\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      date: this.state.date,\n      id: this.state.id,\n      wind: this.state.speed,\n      description: this.state.description,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wangyingjiesongxirui/Desktop/weather-app/src/components/App/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","constructor","props","getWeather","event","preventDefault","city","target","elements","value","country","api_call","fetch","result","json","console","log","setState","temperature","list","main","temp","name","date","dt_txt","substring","id","wind","speed","description","weather","error","state","undefined","forecat","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Titles from \"../Titles/Titles\";\nimport Form from \"../Form/Form\";\nimport Weather from \"../Weather/Weather\";\nimport \"./App.css\";\n\nconst API_KEY = \"3fc44ed29eca0efe94b7e522e87c179e\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      date: undefined,\n      id: undefined,\n      wind: undefined,\n      description: undefined,\n      error: undefined,\n      forecat\n    }\n  }\n  \n  getWeather = async (event) => {\n    event.preventDefault();\n    const city = event.target.elements.city.value;\n    const country = event.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&unit=metric`);\n    const result = await api_call.json();\n    if (city && country) {\n      console.log(result);\n      this.setState({\n        temperature: result.list[0].main.temp,\n        city: result.city.name,\n        country: result.city.country,\n        date: result.list[0].dt_txt.substring(0, 10),\n        id: result.city.id,\n        wind: result.list[0].wind.speed, \n        description: result.list[0].weather[0].description,\n        error: \"\",\n      });\n    } else {\n      this.setState({\n        error: \"Please enter a city and country\"\n      })\n    }\n  }\n\n  render() {\n    return (\n\n      <div className=\"weather__container\">\n        <Titles />\n        <Form getWeather={ this.getWeather }/>\n        <Weather \n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          date={this.state.date}\n          id={this.state.id}\n          wind= {this.state.speed}\n          description={this.state.description}\n          error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}