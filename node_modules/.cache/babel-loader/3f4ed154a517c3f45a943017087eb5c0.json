{"ast":null,"code":"var _jsxFileName = \"/Users/wangyingjiesongxirui/Desktop/weather-app/src/App/App.js\";\nimport React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport Form from \"../components/Form/Form\";\nimport Weather from \"../components/Weather/Weather\";\nimport \"./App.css\";\nconst API_KEY = \"3fc44ed29eca0efe94b7e522e87c179e\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async event => {\n      event.preventDefault();\n      const city = event.target.elements.city.value;\n      const country = event.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&unit=metric`);\n        const result = await api_call.json();\n        console.log(result);\n        this.setState({\n          temperature: Math.round(result.list[0].main.temp - 273.15),\n          city: result.city.name,\n          country: result.city.country,\n          date: result.list[0].dt_txt.substring(0, 10),\n          id: result.city.id,\n          wind: result.list[0].wind.speed,\n          description: result.list[0].weather[0].description,\n          icon: result.list[0].weather[0].icon,\n          error: \"\",\n          forecastOneDay: Math.round(result.list[4].main.temp - 273.15),\n          forecastTwoDay: Math.round(result.list[12].main.temp - 273.15),\n          forecastThreeDay: Math.round(result.list[20].main.temp - 273.15),\n          forecastFourDay: Math.round(result.list[28].main.temp - 273.15),\n          forecastFiveDay: Math.round(result.list[36].main.temp - 273.15),\n          icon1: result.list[4].weather[0].icon,\n          icon2: result.list[12].weather[0].icon,\n          icon3: result.list[20].weather[0].icon,\n          icon4: result.list[28].weather[0].icon,\n          icon5: result.list[36].weather[0].icon\n        });\n      } else {\n        this.setState({\n          error: \"Please enter a city and country\"\n        });\n      }\n    };\n\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      date: undefined,\n      id: undefined,\n      wind: undefined,\n      description: undefined,\n      icon: undefined,\n      error: undefined,\n      forecastOneDay: undefined,\n      forecastTwoDay: undefined,\n      forecastThreeDay: undefined,\n      forecastFourDay: undefined,\n      forecastFiveDay: undefined,\n      icon1: undefined,\n      icon2: undefined,\n      icon3: undefined,\n      icon4: undefined,\n      icon5: undefined\n    };\n  }\n\n  render() {\n    const {\n      temperature,\n      city,\n      country,\n      date,\n      id,\n      speed,\n      description,\n      icon,\n      error,\n      forecastOneDay,\n      forecastTwoDay,\n      forecastThreeDay,\n      forecastFourDay,\n      fo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      date: this.state.date,\n      id: this.state.id,\n      wind: this.state.speed,\n      description: this.state.description,\n      icon: this.state.icon,\n      error: this.state.error,\n      forecastOneDay: this.state.forecastOneDay,\n      forecastTwoDay: this.state.forecastTwoDay,\n      forecastThreeDay: this.state.forecastThreeDay,\n      forecastFourDay: this.state.forecastFourDay,\n      forecastFiveDay: this.state.forecastFiveDay,\n      icon1: this.state.icon1,\n      icon2: this.state.icon2,\n      icon3: this.state.icon3,\n      icon4: this.state.icon4,\n      icon5: this.state.icon5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wangyingjiesongxirui/Desktop/weather-app/src/App/App.js"],"names":["React","Header","Form","Weather","API_KEY","App","Component","constructor","props","getWeather","event","preventDefault","city","target","elements","value","country","api_call","fetch","result","json","console","log","setState","temperature","Math","round","list","main","temp","name","date","dt_txt","substring","id","wind","speed","description","weather","icon","error","forecastOneDay","forecastTwoDay","forecastThreeDay","forecastFourDay","forecastFiveDay","icon1","icon2","icon3","icon4","icon5","state","undefined","render","fo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport Form from \"../components/Form/Form\";\nimport Weather from \"../components/Weather/Weather\";\nimport \"./App.css\";\n\nconst API_KEY = \"3fc44ed29eca0efe94b7e522e87c179e\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      date: undefined,\n      id: undefined,\n      wind: undefined,\n      description: undefined,\n      icon: undefined,\n      error: undefined,\n      forecastOneDay: undefined,\n      forecastTwoDay: undefined,\n      forecastThreeDay: undefined,\n      forecastFourDay: undefined,\n      forecastFiveDay: undefined,\n      icon1: undefined,\n      icon2: undefined,\n      icon3: undefined,\n      icon4: undefined,\n      icon5: undefined,\n    };\n  }\n\n  getWeather = async (event) => {\n    event.preventDefault();\n\n    const city = event.target.elements.city.value;\n    const country = event.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_KEY}&unit=metric`\n      );\n      const result = await api_call.json();\n\n      console.log(result);\n      \n      this.setState({\n        temperature: Math.round(result.list[0].main.temp - 273.15),\n        city: result.city.name,\n        country: result.city.country,\n        date: result.list[0].dt_txt.substring(0, 10),\n        id: result.city.id,\n        wind: result.list[0].wind.speed,\n        description: result.list[0].weather[0].description,\n        icon: result.list[0].weather[0].icon,\n        error: \"\",\n        forecastOneDay: Math.round(result.list[4].main.temp - 273.15),\n        forecastTwoDay: Math.round(result.list[12].main.temp - 273.15),\n        forecastThreeDay: Math.round(result.list[20].main.temp - 273.15),\n        forecastFourDay: Math.round(result.list[28].main.temp - 273.15),\n        forecastFiveDay: Math.round(result.list[36].main.temp - 273.15),\n        icon1: result.list[4].weather[0].icon,\n        icon2: result.list[12].weather[0].icon,\n        icon3: result.list[20].weather[0].icon,\n        icon4: result.list[28].weather[0].icon,\n        icon5: result.list[36].weather[0].icon,\n      });\n    } else {\n      this.setState({\n        error: \"Please enter a city and country\",\n      });\n    }\n  };\n\n  render() {\n\n    const {temperature, city, country, date, id, speed, description, icon, error, forecastOneDay, forecastTwoDay, forecastThreeDay, forecastFourDay, fo} = this.state;\n\n    return (\n      <div className=\"weather__container\">\n        <Header />\n        <Form getWeather={this.getWeather} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          date={this.state.date}\n          id={this.state.id}\n          wind={this.state.speed}\n          description={this.state.description}\n          icon={this.state.icon}\n          error={this.state.error}\n          forecastOneDay={this.state.forecastOneDay}\n          forecastTwoDay={this.state.forecastTwoDay}\n          forecastThreeDay={this.state.forecastThreeDay}\n          forecastFourDay={this.state.forecastFourDay}\n          forecastFiveDay={this.state.forecastFiveDay}\n          icon1={this.state.icon1}\n          icon2={this.state.icon2}\n          icon3={this.state.icon3}\n          icon4={this.state.icon4}\n          icon5={this.state.icon5}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}